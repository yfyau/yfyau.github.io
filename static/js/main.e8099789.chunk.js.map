{"version":3,"sources":["honey1.svg","honey2.svg","honey3.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","particles_params","particles","shape","type","images","src","HoneySVG1","height","width","HoneySVG2","HoneySVG3","color","value","number","density","enable","size","opacity","move","direction","out_mode","speed","line_linked","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","bubble","distance","duration","retina_detect","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","testClick","setState","isSkip","renderMain","react_default","a","createElement","className","particles_default","params","renderFlyingBee","onClick","state","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0TCUlCC,eAAmB,CACvBC,UAAa,CAQXC,MAAS,CACPC,KAAQ,SACRC,OAAU,CACN,CAACC,IAAOC,IAAWC,OAAU,GAAIC,MAAS,IAC1C,CAACH,IAAOI,IAAWF,OAAU,GAAIC,MAAS,IAC1C,CAACH,IAAOK,IAAWH,OAAU,GAAIC,MAAS,MAGhDG,MAAS,CACPC,MAAS,WAEXC,OAAU,CACND,MAAS,GACTE,QAAW,CACPC,QAAU,IAGlBC,KAAQ,CACJJ,MAAS,IAGbK,QAAW,CACTL,MAAS,IAGXM,KAAQ,CACJC,UAAa,OACbC,SAAY,SACZC,MAAS,GAEbC,YAAe,CACXP,QAAU,IAGhBQ,cAAiB,CACfC,UAAa,SACbC,OAAU,CACRC,QAAW,CACTX,QAAU,EACVY,KAAQ,UAEVC,QAAW,CACTb,QAAU,GAEZc,QAAU,GAEZC,MAAS,CACPC,OAAU,CACRC,SAAY,GACZhB,KAAQ,GACRiB,SAAY,GACZhB,QAAW,EACXI,MAAS,KAIfa,eAAiB,IA0DJC,cArDb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAORQ,UAAY,WACVP,EAAKQ,SAAS,CAACC,QAAQ,KATPT,EAYlBU,WAAa,kBACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAW1C,OAAQ,OAAQ8C,OAAQrD,OAfvBqC,EAoBlBiB,gBAAkB,kBAChBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAOI,QAASlB,EAAKO,WAAlC,cACAI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aArCjBd,EAAKmB,MAAQ,CACXV,QAAQ,GAJMT,wEA6ChB,OACEW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZX,KAAKgB,MAAMV,OAASN,KAAKO,aAAeP,KAAKc,0BAjDpCG,aClEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhB,EAAAC,EAAAC,cAACe,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e8099789.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/honey1.b8422201.svg\";","module.exports = __webpack_public_path__ + \"static/media/honey2.e1cee8d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/honey3.a5ff4b3c.svg\";","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\n\r\nimport HoneySVG1 from './honey1.svg'\r\nimport HoneySVG2 from './honey2.svg'\r\nimport HoneySVG3 from './honey3.svg'\r\n\r\nimport './App.css';\r\nimport './Bee.css';\r\n\r\nconst particles_params = {\r\n  \"particles\": {\r\n    // \"shape\": {\r\n    //   \"type\": \"circle\",\r\n    //   \"stroke\": {\r\n    //     \"width\": 0,\r\n    //     \"color\": \"#000000\"\r\n    //   },\r\n    // },\r\n    \"shape\": {\r\n      \"type\": 'images',\r\n      \"images\": [\r\n          {\"src\": HoneySVG1, \"height\": 20, \"width\": 20},\r\n          {\"src\": HoneySVG2, \"height\": 20, \"width\": 20},\r\n          {\"src\": HoneySVG3, \"height\": 20, \"width\": 20},\r\n      ]\r\n    },\r\n    \"color\": {\r\n      \"value\": \"#FFB733\"\r\n    },\r\n    \"number\": {\r\n        \"value\": 30,\r\n        \"density\": {\r\n            \"enable\": false,\r\n        }\r\n    },\r\n    \"size\": {\r\n        \"value\": 20,\r\n        // \"random\": true\r\n    },\r\n    \"opacity\": {\r\n      \"value\": 0.6,\r\n      // \"random\": true\r\n    },\r\n    \"move\": {\r\n        \"direction\": \"none\",\r\n        \"out_mode\": \"bounce\",\r\n        \"speed\": 5\r\n    },\r\n    \"line_linked\": {\r\n        \"enable\": false\r\n    },\r\n  },\r\n  \"interactivity\": {\r\n    \"detect_on\": \"canvas\",\r\n    \"events\": {\r\n      \"onhover\": {\r\n        \"enable\": true,\r\n        \"mode\": \"bubble\"\r\n      },\r\n      \"onclick\": {\r\n        \"enable\": false\r\n      },\r\n      \"resize\": true\r\n    },\r\n    \"modes\": {\r\n      \"bubble\": {\r\n        \"distance\": 40,\r\n        \"size\": 40,\r\n        \"duration\": 0.3,\r\n        \"opacity\": 1,\r\n        \"speed\": 3\r\n      }\r\n    }\r\n  },\r\n  \"retina_detect\": true\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      isSkip: false\r\n    }\r\n  }\r\n\r\n  testClick = () => {\r\n    this.setState({isSkip: true})\r\n  }\r\n\r\n  renderMain = () => (\r\n    <div className=\"main\">\r\n      <div className=\"particles\">\r\n        <Particles height={'100%'} params={particles_params} />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  renderFlyingBee = () => (\r\n    <div className=\"beeContainer\">\r\n      <p className=\"skip\" onClick={this.testClick}> SKIP >>> </p>\r\n      <div className=\"bee\">\r\n        <div className=\"body\" />\r\n        <div className=\"wing1\" />\r\n        <div className=\"wing2\" />\r\n        <div className=\"stinger\" />\r\n        <div className=\"eyes\" />\r\n      </div>\r\n      <div className=\"cloud1\" />\r\n      <div className=\"cloud2\" />\r\n      <div className=\"cloud3\" />\r\n      <div className=\"cloud4\" />\r\n\r\n      <div className=\"debri1\" />\r\n      <div className=\"debri2\" />\r\n      <div className=\"debri3\" />\r\n      <div className=\"debri4\" />\r\n      <div className=\"debri5\" />\r\n      <div className=\"debri6\" />\r\n    </div>\r\n  )\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.isSkip ? this.renderMain() : this.renderFlyingBee()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}